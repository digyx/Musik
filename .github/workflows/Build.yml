name: Create Binaries for Latest Version

on:
  push:

jobs:
  remove_release:
    name: Remove Previous Release
    runs-on: ubuntu-latest
    
    steps:
      - name: Remove Release
        uses: dev-drprasad/delete-tag-and-release@v0.2.0
        with:
          delete_release: true
          tag_name: nightly
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  create_release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: remove_release
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}

    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: nightly
          release_name: Latest Commit
          draft: false
          prerelease: true

  build:
    name: Build Binaries
    needs: create_release
    runs-on: ${{ matrix.config.os }}

    strategy:
      matrix:
        config:
          - os: ubuntu-latest
          - os: macos-latest
          - os: windows-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v1

      - name: Install Dependencies (Windows)
        if: matrix.config.os == 'windows-latest'
        run: |
          python -m pip install --upgrade setuptools
          python -m pip install -r requirements.txt
          python -m pip install pyinstaller

      - name: Install Dependencies
        if: matrix.config.os != 'windows-latest'
        run: |
          python3 -m pip install --upgrade setuptools
          python3 -m pip install -r requirements.txt
          sudo python3 -m pip install pyinstaller

      - name: Build binaries
        run: pyinstaller -F client.py

      - name: Upload Client Binary (Windows)
        uses: actions/upload-release-asset@v1
        if: matrix.config.os == 'windows-latest'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_name: musik-client-${{ matrix.config.os }}.exe
          asset_path: ./dist/client.exe
          asset_content_type: application/octet-stream

      - name: Upload Client Binary
        uses: actions/upload-release-asset@v1
        if: matrix.config.os != 'windows-latest'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_name: musik-client-${{ matrix.config.os }}
          asset_path: ./dist/client
          asset_content_type: application/octet-stream
